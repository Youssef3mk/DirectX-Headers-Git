name: Update Version Number

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}

      - name: Check latest version and commit
        id: check_upstream
        run: |
          # احصل على آخر إصدار و commit من upstream
          LATEST_VERSION=$(curl -s "https://api.github.com/repos/microsoft/DirectX-Headers/releases/latest" | jq -r .tag_name | sed 's/^v//')
          LATEST_COMMIT=$(curl -s "https://api.github.com/repos/microsoft/DirectX-Headers/commits/main" | jq -r .sha)
          
          CURRENT_VERSION=$(grep "^Version:" DirectX-Headers.spec | awk '{print $2}')
          CURRENT_COMMIT=$(grep "^%global commit" DirectX-Headers.spec | awk '{print $3}')
          
          echo "latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT
          echo "latest_commit=$LATEST_COMMIT" >> $GITHUB_OUTPUT
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          if [ "$LATEST_VERSION" != "$CURRENT_VERSION" ] || [ "$LATEST_COMMIT" != "$CURRENT_COMMIT" ]; then
            echo "needs_update=true" >> $GITHUB_OUTPUT
          fi

      - name: Update version and commit
        if: steps.check_upstream.outputs.needs_update == 'true'
        run: |
          NEW_VERSION="${{ steps.check_upstream.outputs.latest_version }}"
          LATEST_COMMIT="${{ steps.check_upstream.outputs.latest_commit }}"
          
          # تحديث الإصدار وال commit
          sed -i "s/^Version:        .*/Version:        ${NEW_VERSION}/" DirectX-Headers.spec
          sed -i "s/^%global commit .*/%global commit ${LATEST_COMMIT}/" DirectX-Headers.spec
          
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add DirectX-Headers.spec
          git commit -m "Update to version ${NEW_VERSION} (commit ${LATEST_COMMIT:0:7})"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
